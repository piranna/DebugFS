#!/usr/bin/env bash

# This script prepares the users filesystem

GRN="\e[32m"
CLR="\e[0m"


BAREBONES=`pwd`/../nodeos-barebones
NODE_DIR=$BAREBONES/deps/node

TOOLCHAIN=$BAREBONES/node_modules/nodeos-cross-toolchain
TOOLS=$TOOLCHAIN/out

source $TOOLCHAIN/scripts/adjustEnvVars.sh || exit $?


if [[ -z "$name" ]]; then name=usersfs; fi


HOME=$OBJECTS/nodeos

rm   -rf $OBJECTS &&
mkdir -p $HOME    || exit 400


#
# Install user dependencies
#

CC=$TARGET-gcc                  \
CXX=$TARGET-g++                 \
npm_config_prefix=$HOME         \
$NODE_DIR/deps/npm/cli.js       \
    install -g                  \
    --loglevel warn             \
    --arch=$NODE_ARCH           \
    --nodedir=$NODE_DIR         \
    --jobs=$JOBS                \
    `grep -v "^#" packages.txt` || exit 410


#
# Dummy init file for the user
#

cp init.js $HOME/init || exit 420


#
# Copy nodeos user login info
#

mkdir -p $HOME/etc       &&
cp logon.json $HOME/etc/ || exit 430


#
# Wrap the system up and pack it
#

case $PLATFORM in
  docker)
    chmod -R go= "$HOME"    &&
    docker build -t $name . || exit 441
  ;;
  pc_qemu | pc_image | raspberry_qemu | raspberry_image)
    DISK_SIZE=32  # Size in MB

    mkdir -p `dirname $OUT_DIR`
    genext2fs -b $((DISK_SIZE*1024)) --root $OBJECTS --bytes-per-inode 8192 \
      --reserved-percentage 0 --squash-perms $OUT_DIR || exit 442
      ln -sfv $OUT_DIR $name.img                      || exit 28
  ;;
esac


echo -e "${GRN}Successfully built Layer-3 image '$name'${CLR}"
